O arquivo Saida.h conta com as seguintes funções descrita abaixo,
para utilizar basta informar as informações solicitidas, cada uma explicada abaixo:

void confPinosOut(int NUMERO_DE_SAIDAS,  int CLOCK , int LATCH , int DADOS_PARA_O_CI)
- Primeira função usada em Setup, deve-se informar:
- O NUMERO_DE_SAIDAS, com valor maximo de 32 (0-31);
- CLOCK, conexão ao clock (SHCP do 74hc595).
- LATCH, ssaida de latch (STCp do 74HC595).
- DADOS_PARA_O_CI, saida de dados (DS do 74HC595).
- A função não retorna nada.
 
void escreveSaida(int pino, int nivel);
- Função trabalha igual a digitalWrite, informe qual saida e seu estado.
*********A saida (Q7 ou D7) do primeiro CI  é a de valor 0**************
- A função não retorna nada.

int LeSaida (int pin);
- Informa o valor de qualquer saida.
- Função retorna uma int de valor 0 ou 1.

int LePortSaida(int ports);
- Devolve o valor decimal de cada CI.
**********O primeiro CI tem valor 0.**********
- Retorna um int de 0~255.

void escreveport(int PORTA, int Valores);
- Semelhante a função LePortSaida, porem, escreve um valor na porta de 0 a 255.
- A função não retorna nada.


O arquivo Entrada.h conta com as seguintes funções descrita abaixo,
para utilizar basta informar as informações solicitidas, cada uma explicada abaixo:

void confPinosIn(int NUMERO_DE_ENTRADAS,  int CLOCK , int LATCH , int DADOS_DO_CI);
- Primeira função usada em Setup, deve-se informar:
- O NUMERO_DE_ENTRADAS, sem valor maximo, recomenda-se até 64 entradas.
- CLOCK, conexão ao clock (CLK do 74hc165).
- LATCH, ssaida de latch (SH/LD do 74HC165).
- DADOS_DO_CI, entrada de dados (SO do 74HC165).
- A função não retorna nada.

int LeEntrada(int pin);
- Função trabalha igual a digitalRead, retornando o estado da entrada.
*********A saida (Q7 ou D7) do primeiro CI  é a de valor 0**************
- Função retorna int com 0 ou 1.

int PortEntrada(int port);
- Devolve o valor decimal de cada CI.
**********O primeiro CI tem valor 0.**********
- Retorna um int de 0~255.




***************************English******************************************************
The Saida.h file has the following functions described below,
To use, just enter the requested information, each one explained below:

Void confPinosOut (int NUMBER_ID, int CLOCK, int LATCH, int DATA_PART_O_CI)
- First function used in Setup, you must inform:
- THE NUMBER_DE_SAIDAS, with maximum value of 32 (0-31);
- CLOCK, connection to the clock (SHCP of 74hc595).
- LATCH, latch assay (STCp of 74HC595).
- DATA_PARA_O_CI, data output (DS of 74HC595).
- The function returns nothing.
 
Void writesAid (int pin, int level);
- Function works the same as digitalWrite, inform which output and its state.
********* The output (Q7 or D7) of the first CI is a value of 0 **************
- The function returns nothing.

Int LeSaida (int pin);
- Informs the value of any output.
- Function returns an int of value 0 or 1.

Int LePortSaida (int ports);
- Returns the decimal value of each CI.
********** The first CI has a value of 0. **********
- Returns an int of 0 ~ 255.

Void writesport (int PORT, int values);
- Similar to the LePortSaida function, however, it writes a value on the port from 0 to 255.
- The function returns nothing.


The Input.h file has the following functions described below,
To use, just enter the requested information, each one explained below:

Void confPinosIn (int NUMBER_INTERNATES, int CLOCK, int LATCH, int CID_DATA);
- First function used in Setup, you must inform:
- THE NUMBER_DE_ENTRADAS, with no maximum value, up to 64 entries are recommended.
- CLOCK, clock connection (CLK of 74hc165).
- LATCH, latch assay (SH / LD of 74HC165).
- CI_DATA, data input (74HC165 OS).
- The function returns nothing.

Int Le Input (int pin);
- Function works the same as digitalRead, returning the state of the input.
********* The output (Q7 or D7) of the first CI is a value of 0 **************
- Function returns int with 0 or 1.

Int PortEntry (int port);
- Returns the decimal value of each CI.
********** The first CI has a value of 0. **********
- Returns an int of 0 ~ 255.